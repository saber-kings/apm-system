<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration
1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--classPathEntry:数据库的JDBC驱动,换成你自己的驱动位置 -->
    <classPathEntry location="F:\Maven\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar"/>
    <!-- 一个数据库一个context -->
    <!--defaultModelType="flat" 大数据字段，不分表 -->
    <context id="MysqlTables" targetRuntime="MyBatis3" defaultModelType="flat">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
        -->
        <property name="autoDelimitKeywords" value="true"/>
        <!--beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，
        比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!-- 生成的Java文件的编码-->
        <property name="javaFileEncoding" value="utf-8"/>
        <!-- 格式化java代码-->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码-->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <!-- 注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/><!-- 是否取消注释 -->
            <property name="suppressDate" value="true"/> <!-- 是否生成注释代时间戳-->
        </commentGenerator>
        <!-- jdbc连接 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://10.132.22.45:3306/apm_vue?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai"
                        userId="root"
                        password="admin123"/>
        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- 生成实体类地址src/main/java (要改成你自己的目录) -->
        <javaModelGenerator targetPackage="cn.saberking.jvav.apm.web.domain"
                            targetProject="src/main/java">
            <!--自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；-->
            <!--<property name="constructorBased" value="false"/>-->
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否创建一个不可变的类，如果为true，
                 那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类-->
            <!--<property name="immutable" value="false"/>-->
            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法-->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 生成map.xml文件src/main/resources (要改成你自己的目录) -->
        <sqlMapGenerator targetPackage="mapper"
                         targetProject="src/main/resources">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，
            最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>
        <!-- 生成map.xml对应client，也就是接口mapper -->
        <javaClientGenerator targetPackage="cn.saberking.jvav.apm.web.mapper"
                             targetProject="src/main/java"
                             type="MIXEDMAPPER">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，
            最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>
        <table tableName="apm_store_cart" domainObjectName="ApmStoreCart"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <columnOverride column="is_pay" javaType="java.lang.Integer"/>
            <columnOverride column="is_del" javaType="java.lang.Integer"/>
            <columnOverride column="is_new" javaType="java.lang.Integer"/>
        </table>
    </context>
</generatorConfiguration>